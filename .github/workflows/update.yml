name: "Update Nix Flake"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  nix-flake-update:
    name: Update flake.lock
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write
    env:
      UPDATE_BRANCH: update-flake-inputs
    outputs:
      pr-url: ${{ steps.metadata.outputs.pr-url }}
      pr-branch: ${{ steps.metadata.outputs.pr-branch }}
      pr-operation: ${{ steps.metadata.outputs.pr-operation }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Determine pair metadata
        id: pair
        env:
          OWNER: ${{ github.repository_owner }}
          TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          data=$(curl -fsSL -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/users/$OWNER")
          name=$(echo "$data" | jq -r '.name // .login')
          id=$(echo "$data" | jq -r '.id')
          if [ -z "$id" ] || [ "$id" = "null" ]; then
            echo "Failed to determine user id for $OWNER" >&2
            exit 1
          fi
          email="${id}+${OWNER}@users.noreply.github.com"
          echo "name=$name" >> "$GITHUB_OUTPUT"
          echo "email=$email" >> "$GITHUB_OUTPUT"
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v20
      - name: Configure Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v13
        with:
          use-flakehub: false
      - name: Gather flake inputs
        id: flake-inputs
        run: scripts/list-public-flake-inputs.sh
      - name: Update flake.lock
        id: update
        uses: DeterminateSystems/update-flake-lock@v27
        with:
          commit-msg: |
            flake.lock: update Nix inputs

            Co-authored-by: ${{ steps.pair.outputs.name }} <${{ steps.pair.outputs.email }}>
          pr-title: "Update Nix flake inputs"
          pr-body: |
            Automated update of the Nix flake lock file.

            ```
            {{ env.GIT_COMMIT_MESSAGE }}
            ```
          pr-labels: |
            dependencies
            automated
          branch: ${{ env.UPDATE_BRANCH }}
          inputs: ${{ steps['flake-inputs'].outputs.inputs }}
      - name: Capture update metadata
        id: metadata
        env:
          PR_URL: ${{ steps.update.outputs.pull-request-url }}
          PR_OPERATION: ${{ steps.update.outputs.pull-request-operation }}
          UPDATE_BRANCH: ${{ env.UPDATE_BRANCH }}
        run: |
          echo "pr-url=${PR_URL}" >> "$GITHUB_OUTPUT"
          echo "pr-operation=${PR_OPERATION}" >> "$GITHUB_OUTPUT"
          if [ -n "$PR_URL" ]; then
            echo "pr-branch=${UPDATE_BRANCH}" >> "$GITHUB_OUTPUT"
          else
            echo "pr-branch=" >> "$GITHUB_OUTPUT"
          fi
  flake-policy:
    name: Flake policy validation
    needs: nix-flake-update
    if: needs.nix-flake-update.outputs.pr-branch != '' && needs.nix-flake-update.outputs.pr-operation != 'closed'
    uses: ./.github/workflows/flake-policy.yml
    with:
      ref: ${{ needs.nix-flake-update.outputs.pr-branch }}
    secrets: inherit
  check:
    name: Flake checks on update branch
    needs: [nix-flake-update, flake-policy]
    if: needs.nix-flake-update.outputs.pr-branch != '' && needs.nix-flake-update.outputs.pr-operation != 'closed'
    uses: ./.github/workflows/check.yml
    with:
      ref: ${{ needs.nix-flake-update.outputs.pr-branch }}
    secrets: inherit
  auto-merge:
    name: Enable auto-merge
    needs: [nix-flake-update, flake-policy, check]
    if: needs.nix-flake-update.outputs.pr-url != '' && needs.nix-flake-update.outputs.pr-operation != 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Extract PR number
        id: pr-number
        run: |
          pr_url="${{ needs.nix-flake-update.outputs.pr-url }}"
          if [ -z "$pr_url" ]; then
            echo "No pull request URL provided" >&2
            exit 1
          fi
          echo "number=${pr_url##*/}" >> "$GITHUB_OUTPUT"
      - name: Enable PR auto-merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ github.token }}
          pull-request-number: ${{ steps.pr-number.outputs.number }}
          merge-method: rebase
  trigger-package-updates:
    name: Trigger package updates
    needs: [nix-flake-update, check]
    if: ( needs.nix-flake-update.outputs.pr-branch == '' && needs.nix-flake-update.outputs.pr-operation != 'closed' ) || needs.check.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Dispatch Update Packages workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'update-packages.yml',
              ref: context.ref
            })
